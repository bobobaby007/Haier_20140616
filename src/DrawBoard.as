package  {	import flash.display.MovieClip	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.events.Event;	import flash.geom.Matrix;	public class DrawBoard extends MovieClip{		public var _asDraw:As_Drawing		public var _paper:Paper				//static public var _drawBoard:DrawBoard		private var _style:int		private var _isErase:Boolean		private var _brush1:Brush1=new Brush1()				private var _brush2:Brush2=new Brush2()//-------light		private var _brush3:Brush3=new Brush3()		private var _brush4:Brush4=new Brush4()		private var _airBrush:AirBrushItem=new AirBrushItem()				public var _setuped:Boolean=false				//private var _texture_1:BitmapData=new paper_1()		//private var _texture_2:BitmapData=new paper_2()		//private var _texture_3:BitmapData=new paper_3()		//private var _texture_4:BitmapData=new paper_4()		//private var _texture_5:BitmapData=new paper_5()				private var _hasDrawed:Boolean=false		private var _available:Boolean=true		public function DrawBoard() {			//_drawBoard=this		}				public function setup(){					_setuped=true			_paper=new Paper()						_paper.setup(GlobalVar._mainWidth,GlobalVar._mainHeight)			addChild(_paper)									_asDraw=new As_Drawing()						addChild(_asDraw)			_asDraw.visible=false				_paper._Available=true			_Style=1								}				public function set _Style(__set:int){			_style=__set						switch(__set){				case 0:						_asDraw.DrawObject=_asDraw._defaultDrawSprite					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					_asDraw._Texture=null					_paper._Targets=[_asDraw]											_paper._Style=Paper.STYLE_LANDSCOLOUR										drawingShow=false				break				case 1:					_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					_asDraw._Texture=null					_paper._Targets=[]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true									break				case 2:					_asDraw.DrawObject=_asDraw._defaultDrawSprite					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					_asDraw._Texture=null					_paper._Targets=[_asDraw]										_paper._Style=Paper.STYLE_NORMAL										drawingShow=true				break				case 3:						_asDraw.DrawObject=_brush2					_asDraw._ScaleAble=false					_asDraw._glowingBlur(0)								_asDraw._IsAirBrush=false					_asDraw._Texture=null					_paper._Targets=[]										_paper._Style=Paper.STYLE_NORMAL										drawingShow=true				break					//_airBrush				case 4:						_asDraw.DrawObject=_airBrush					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=true					_asDraw._Texture=null					//_asDraw._RotationChangeable=true					_paper._Targets=[_asDraw]											_paper._Style=Paper.STYLE_AIRBRUSH										drawingShow=true				break									//------------add glow----								case 5:						_asDraw.DrawObject=_brush2					_asDraw._ScaleAble=true					_asDraw._glowingBlur(60)									_paper._Targets=[]										_paper._Style=Paper.STYLE_NORMAL										drawingShow=true				break					case 6:						_asDraw.DrawObject=_brush3					_asDraw._ScaleAble=true					_asDraw._glowingBlur(60)									_paper._Targets=[]										_paper._Style=Paper.STYLE_NORMAL										drawingShow=true				break									case 7:						_asDraw.DrawObject=_brush4					_asDraw._ScaleAble=true					_asDraw._glowingBlur(60)									_paper._Targets=[]										_paper._Style=Paper.STYLE_NORMAL										drawingShow=true				break					case 8:						_asDraw.DrawObject=_brush2					_asDraw._ScaleAble=true					_asDraw._glowingBlur(60)									_paper._Targets=[]										_paper._Style=Paper.STYLE_NORMAL										drawingShow=true				break									case 10://----------------eraser					//_asDraw.DrawObject=_brush1//					_asDraw._glowingBlur(0)	//					_asDraw._ScaleAble=false//					_asDraw._IsAirBrush=false//					_paper._Targets=[_asDraw]					//					_asDraw._Texture=null//					_paper._Style=Paper.STYLE_NORMAL					//					drawingShow=true										_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					//_asDraw._Texture=_texture_1										_paper._Targets=[_asDraw]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true							break												//-------texture				case 11:					_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					//_asDraw._Texture=_texture_1										_paper._Targets=[_asDraw]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true									break				case 12:					_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					//_asDraw._Texture=_texture_2										_paper._Targets=[_asDraw]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true									break				case 13:					_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					//_asDraw._Texture=_texture_3										_paper._Targets=[_asDraw]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true									break				case 14:					_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					//_asDraw._Texture=_texture_4										_paper._Targets=[_asDraw]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true									break				case 15:					_asDraw.DrawObject=_brush1					_asDraw._glowingBlur(0)						_asDraw._ScaleAble=false					_asDraw._IsAirBrush=false					//_asDraw._Texture=_texture_5										_paper._Targets=[_asDraw]						//_paper._Targets=[_asDraw]						_paper._Style=Paper.STYLE_NORMAL										drawingShow=true									break							}								if(_isErase){							}					}				public function set _IsErase(__set:Boolean){			_isErase=__set						if(__set){				_paper._IsErase=true				drawingShow=false							}else{				_paper._IsErase=false				drawingShow=true				_Style=_style			}		}		private function set drawingShow(__set:Boolean){			if(__set){				_asDraw.visible=true				_asDraw._Clearable=false				_asDraw.addEventListener("beforeStopDrawing",drawStopHander)			}else{				_asDraw.visible=false				_asDraw._Clearable=true				_asDraw.removeEventListener("beforeStopDrawing",drawStopHander)			}		}		private function drawStopHander(event:Event){			if(!_available){				return			}			_hasDrawed=true						_paper._print(_asDraw,_paper._IsErase)		}		public function set _Available(__set:Boolean){			_available=__set			_paper._Available=__set			_asDraw.Available=__set			if(__set){							}		}		public function set _Color(__set:Number){			_asDraw._Color=__set			_paper._BrushColor=__set		}		public function set _Scale(__set:Number){			_asDraw._MaxScale=__set			}		public function set _Alpha(__set:Number){			_asDraw._Alpha=__set						_paper._Alpha=__set		}		public function _Back(){			_paper._Back()					}		public function _Forward(){			_paper._Forward()		}		public function get _HasDrawed():Boolean{			trace(_paper._currentHis)			if(_paper._currentHis<=3){				_hasDrawed=false			}						return _hasDrawed		}			}	}