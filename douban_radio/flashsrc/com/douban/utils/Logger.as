package com.douban.utils{    import flash.external.ExternalInterface;    import flash.events.IOErrorEvent;    import flash.display.Sprite;    import flash.net.URLRequest;    import flash.net.URLLoader;    import flash.system.Capabilities;    import com.adobe.serialization.json.JSON_as;    import com.douban.utils.Format;    public class Logger extends Sprite{        private var extLogger:String;        private var HOST;        private var repLoader:URLLoader;        //lg = new Logger(extLogger, host)        public function Logger(...args) {            extLogger = args.length > 0 ? args[0] : 'console.log';            HOST = args.length > 1 ? args[1] : null;            log('Logger init, host =', HOST, 'ext =', extLogger, 'ver =', Format.RADIO_VER);            repLoader = new URLLoader();            repLoader.addEventListener(IOErrorEvent.IO_ERROR, loader_ioError);        }        public function log(...strs) {            var outStr = '';            for (var s in strs) {                var str = strs[s];                if (typeof str == 'object') {                    try {                        str = JSON_as.encode(str);                    } catch(e) {}                }                outStr += (' ' + String(str));            }            trace('> ' + outStr);            ExternalInterface.call(extLogger, outStr);        }        public function report(reason, kind) {            if (!HOST) return;            log('report for reason: ' + reason + ' kind: ' + kind)            var env = ExternalInterface.call('function(){return navigator.userAgent}');            env += (' V:' + Capabilities.version);            env += (' SV:' + Format.RADIO_VER);            var rurl = HOST + '/j/except_report';            rurl = rurl + '?kind=' + kind                     + '&reason=' + encodeURIComponent(reason)                    + '&env=' + encodeURIComponent(env);            try {                repLoader.load(new URLRequest(rurl));            } catch(e) {                loader_ioError(e);            }        }        private function loader_ioError(e) {            log('report loader failed.');        }    }}