package  {	import flash.display.MovieClip;	import com.google.zxing.BarcodeFormat	import com.google.zxing.MultiFormatWriter	import com.google.zxing.common.BitMatrix	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.geom.Rectangle	public class QR_Code extends MovieClip{		private var _textString:String=""		private var _bitMap:Bitmap		private var _bitMapData:BitmapData		private var _w:Number		private var _h:Number		public function QR_Code() {			// constructor code		}		public function _refreshStr(__str:String,__w:Number=250,__h:Number=250){			if(_bitMap!=null){				removeChild(_bitMap)				_bitMap=null			}			_textString=__str			_w=__w			_h=__h						var _writer:MultiFormatWriter=new MultiFormatWriter()												var _matrix:BitMatrix						try            {            _matrix = _writer.encode(_textString,BarcodeFormat.QR_CODE,_w,_h) as BitMatrix            }            catch (e:Error)            {            trace('err');            return;            }						//trace("sss",_matrix )//_writer.encode(_textString,BarcodeFormat.QR_CODE,25,25)			//return						var bmd:BitmapData = new BitmapData(_w, _h, true, 0x00000000);			            for (var h:int = 0; h < _h; h++)            {                for (var w:int = 0; w < __w; w++)                {                   //trace(_matrix._get(w, h))				   				   if (_matrix._get(w, h) == 0)                    {                        //bmd.setPixel(w, h,0xffffffff);						                    }                    else                    {						bmd.fillRect(new Rectangle(w, h,1,1),0xff000000)                       // bmd.setPixel(w, h, 0xffff0000);                    }                        }            }						_bitMap=new Bitmap(bmd)			addChild(_bitMap)		}	}	}