package  {	import flash.text.Font		import flash.text.TextField;	import flash.text.TextFormat;	import flash.external.ExternalInterface	public class FontDevice {		static private var _fonts:Array		static public var _defaultFontSetting:Array=[["Microsoft YaHei Bold",1],["微软雅黑",1],["Microsoft YaHei",1],["YaHei",1],["Adobe 黑体",1],["粗黑",1],["黑体",1],["黑",1],["Hei",1],["_sans",1]]		public function FontDevice() {			// constructor code		}		////font_list.dataProvider = new DataProvider(fonts_array);//font_list.addEventListener(Event.CHANGE, change_font);//sampletext.addEventListener(Event.CHANGE,change_text);//function change_font(event:Event):void {//        var font:TextFormat = new TextFormat();//        font.font = new String(font_list.selectedItem.data);//        displayer.setTextFormat(font);//}//function change_text(event:Event) {//        displayer.text = sampletext.text;//}		static public function get _Fonts():Array{			if(_fonts){				return _fonts			}			var fonts:Array = Font.enumerateFonts(true);			_fonts=[]			for (var i:int = 0; i < fonts.length; i++) {				var _fo:Font=fonts[i] as Font				//trace (_fo.fontType,_fo.fontStyle,_fo.fontName)					_fonts.push(_fo.fontName);			}			return _fonts		}		static public function setFont(__textField:TextField,__fonts:Array=null):String{			if(__fonts==null){				__fonts=_defaultFontSetting			}			var _fontName:String="Arial"			//Font.registerFont()			mainLoop:for(var f:int=0;f<__fonts.length;f++){								for(var i:int=0;i<_Fonts.length;i++){					trace(_Fonts[i])					if(__fonts[f][1]){												if(_Fonts[i].indexOf(__fonts[f][0])!=-1){														_fontName=_Fonts[i]							//							break mainLoop						}					}else{						if(_Fonts[i]==__fonts[f][0]){							_fontName=_Fonts[i]							break mainLoop						}					}									}			}			//trace("-------fontName:",_fontName)			//ExternalInterface.call("showFontName",_fontName)			var _textFormat:TextFormat=new TextFormat()						_textFormat.font=unescape(_fontName)			trace("-------fontName:",_textFormat.font)			__textField.embedFonts=false			__textField.setTextFormat(_textFormat)			__textField.defaultTextFormat=_textFormat			return _fontName		}		//----	}	}