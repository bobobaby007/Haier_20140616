package  {	import flash.events.Event;	import flash.events.ErrorEvent		import flash.net.URLVariables	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod	import com.adobe.serialization.json.JSON_as		import flash.net.URLRequestHeader;	import flash.errors.IOError;	import flash.events.IOErrorEvent;	import flash.events.EventDispatcher;	import AsPreloader.Preloader;		//import org.httpclient.HttpClient;		public class DouBan_Cell  extends EventDispatcher{ 		static public var _basicSaveUrl:String="http://biz.douban.com/cell/"		static public var _saveInfoUrl:String="http://bob.douban.com/db/biz/"		static public var _getting:Boolean=false		static public var _postting:Boolean=false		static public var _debug:int=0				public var _campaign_name:String="fi_ad2013_vote_date"//"fi_yangtian_M4400s_hope"		public var _key:String="e0a4605e7c0011e3961e"//"9069e4226c4e11e3a8a2"//"210066fa4f4f11e2829a"//		//private var _saveInfoUrl:String="http://biz.douban.com/cell/demo/"				static private var _self:DouBan_Cell				static public var EVENT_POST_OK:String="EVENT_POST_OK"						static public var EVENT_GET_OK:String="EVENT_GET_OK"						static public var _uid:String=""		static public var _ck:String=""		static public var _getResult:Array				public function DouBan_Cell() {				checkDouban()			addEventListener(DouBan_Cell.EVENT_GET_OK,serverHander)			addEventListener(DouBan_Cell.EVENT_POST_OK,serverHander)		}		public function checkDouban(){			_uid=DouBan._Self._id			_ck=DouBan._Self._ck			_saveInfoUrl="http://bob.douban.com/db/biz/"+_campaign_name+"?key="+_key//_basicSaveUrl+_campaign_name+"/"			if(DouBan._Self._uid=="user_uid"){				_debug=1			}else{				_debug=0			}			//_debug=0		}		static public function get _Self():DouBan_Cell{			if(!_self){								_self=new DouBan_Cell()			}			return _self		}						//-----------发布新任务		public function _post(__object:Object,__postHander:Function=null){							checkDouban()									_postting=true			var _docs:Object=__object						var _date:Date=new Date			_docs.DateTime=_date.time									var _docsStr:String=JSON_as.encode(_docs)						_docsStr=_docsStr.split("&").join("|and|")						trace(_docsStr)												var _urlR:URLRequest=new URLRequest(_saveInfoUrl)						var hdr:URLRequestHeader = new URLRequestHeader("Content-type", "application/json"); 			_urlR.requestHeaders.push(hdr);						_urlR.method=URLRequestMethod.POST						//var urlVars:URLVariables=new URLVariables			//			urlVars.docs=_docsStr//			urlVars.debug=_debug					//			urlVars.user_id=_uid//			urlVars.ck=_ck						_urlR.data= _docsStr//JSON.encode([{"x": 7890}, {"x": 1234}])						var _urlLoader:URLLoader=new URLLoader			if(__postHander!=null){				_urlLoader.addEventListener(Event.COMPLETE,__postHander)			}else{							}			_urlLoader.addEventListener(Event.COMPLETE,postHander)			_urlLoader.load(_urlR)		}		private function postHander(event:Event){			_postting=false			trace(event.target.data)			this.dispatchEvent(new Event(EVENT_POST_OK))		}				//----删除所有任务--		public function _delete(__object:Object){						checkDouban()					var _docs:Object=__object			var _docsStr:String=JSON_as.encode(_docs)									_docsStr=_docsStr.split("&").join("|and|")						_docsStr=encodeURI(_docsStr)			var _urlR:URLRequest=new URLRequest(_saveInfoUrl+"&q="+_docsStr)									_urlR.method=URLRequestMethod.POST			_urlR.data="someData"			_urlR.requestHeaders = [				new URLRequestHeader("X-HTTP-Method-Override",  URLRequestMethod.DELETE),				new URLRequestHeader("Content-type", "application/json")				];						var _urlLoader:URLLoader=new URLLoader			_urlLoader.load(_urlR)		}		//------取得数据		public function _get(_object:Object,__inludeObject:Object,_resultNum:int=20,__toHander:Function=null,__sort:Object=null,__skip:int=0){				checkDouban()			_getting=true			var _docs:Object=_object																	var _docsStr:String=JSON_as.encode(_docs)						_docsStr=_docsStr.split("&").join("|and|")						_docsStr=encodeURI(_docsStr)													var _sortStr:String			if(__sort){				_sortStr="&s="+encodeURI(JSON_as.encode(__sort))			}else{				_sortStr=""			}						//_sortStr="&sort="+escape(_sortStr)//=escape("{'DateTime'}")						//_docsStr={}						/*$gt:大于			$lt:小于			$gte:大于或等于			$lte:小于或等于*/						var _url:String=_saveInfoUrl+"&q="+_docsStr+"&l="+_resultNum+_sortStr+"&sk="+__skip+"&f="+encodeURI(JSON_as.encode(__inludeObject))									trace(_url)			var _urlR:URLRequest=new URLRequest(_url)									_urlR.requestHeaders = [				new URLRequestHeader("Content-type", "application/json")				];						_urlR.method=URLRequestMethod.POST						var _urlLoader:URLLoader=new URLLoader()			_urlLoader.addEventListener(Event.COMPLETE,getHander)			_urlLoader.load(_urlR)						function getHander(event:Event){								trace("---getHander----")				trace(event.target.data)					trace("-------")				var _str:String=event.target.data								_str=_str.split("|and|").join("&")				/*var _partern:RegExp=/null/g				_str=_str.replace(_partern,"")				_partern=/\?/g				_str=_str.replace(_partern,"")*/				//trace(_str)				var t:Object=JSON_as.decode(_str)							if(__toHander!=null){					__toHander.call(this,t.data)				}				try{					_getResult=t.data									}catch(error){									}						}		}		public function _getCount(_object:Object,__toHander:Function=null){				checkDouban()			_getting=true			var _docs:Object=_object								var _docsStr:String=JSON_as.encode(_docs)			_docsStr=encodeURI(_docsStr)									_docsStr=_docsStr.split("&").join("|and|")						trace(_docsStr)									//_sortStr="&sort="+escape(_sortStr)//=escape("{'DateTime'}")						//_docsStr={}						var _url:String=_saveInfoUrl+"&q="+_docsStr+"&c=true"									trace(_url)			var _urlR:URLRequest=new URLRequest(_url)									var _urlLoader:URLLoader=new URLLoader()			_urlLoader.addEventListener(Event.COMPLETE,getHander)			_urlLoader.load(_urlR)						function getHander(event:Event){								trace("---getHander----")				trace(event.target.data)					trace("-------")				var _str:String=event.target.data				_str=_str.split("|and|").join("&")				/*var _partern:RegExp=/null/g				_str=_str.replace(_partern,"")				_partern=/\?/g				_str=_str.replace(_partern,"")*/				//trace(_str)				var t:Object=JSON_as.decode(_str)							if(__toHander!=null){					__toHander.call(this,t.data)				}				try{					_getResult=t.data									}catch(error){									}						}		}		public function _changeObject(__object:Object,__toObject:Object,__toHander:Function=null){			checkDouban()						var _docs:Object=__object															var _docsStr:String=JSON_as.encode(_docs)			_docsStr=encodeURI(_docsStr)						_docsStr=_docsStr.split("&").join("|and|")						trace(_docsStr)								var _urlR:URLRequest=new URLRequest(_saveInfoUrl+"&q="+_docsStr+"&m=true&u=true")						_urlR.method=URLRequestMethod.POST											_urlR.requestHeaders = [				new URLRequestHeader("X-HTTP-Method-Override",  URLRequestMethod.PUT),				new URLRequestHeader("Content-type", "application/json")				];						//_urlR.requestHeaders.push(new URLRequestHeader("X-HTTP-Method-Override", URLRequestMethod.PUT));			//var urlVars:URLVariables=new URLVariables			//			urlVars.docs=_docsStr//			urlVars.debug=_debug					//			urlVars.user_id=_uid//			urlVars.ck=_ck			//var _server:HttpClient						_urlR.data=JSON_as.encode({"$set":__toObject})						var _urlLoader:URLLoader=new URLLoader			if(__toHander!=null){				_urlLoader.addEventListener(Event.COMPLETE,__toHander)			}else{							}			//_urlLoader.addEventListener(Event.COMPLETE,postHander)			_urlLoader.load(_urlR)					}				//------		private function serverHander(event:Event){					}	}			}