package  {	import flash.display.MovieClip;	import flash.events.MouseEvent;	import gs.TweenLite		import flash.display.DisplayObject;	public class ItemsContainer extends MovieClip{		private var currentBtn		public function ItemsContainer() {			for(var i:int=0;i<this.numChildren;i++){				var _item:MovieClip=this.getChildAt(i) as MovieClip				_item.buttonMode=true				//_item.addEventListener(MouseEvent.CLICK,itemHander)				_item.addEventListener(MouseEvent.MOUSE_OVER,itemHander)				_item.addEventListener(MouseEvent.MOUSE_DOWN,itemHander)				_item.addEventListener(MouseEvent.MOUSE_OUT,itemHander)			}		}				private function itemHander(event:MouseEvent){			var _item:MovieClip=event.currentTarget as MovieClip			switch(event.type){				case MouseEvent.CLICK:					var __class:Class=_item.constructor					var _m:MovieClip=new __class()					ItemsBoard._self._AddItem(_m)				break				case MouseEvent.MOUSE_DOWN:										ItemSelecter._self._hideAlert()					ItemHander._self._Target=_item					stage.addEventListener(MouseEvent.MOUSE_UP,stageMouseHander)				break				case MouseEvent.MOUSE_OVER:					TweenLite.to(_item,.4,{scaleX:1.1,scaleY:1.1})				break				case MouseEvent.MOUSE_OUT:					TweenLite.to(_item,.4,{scaleX:1,scaleY:1})				break			}		}		private function stageMouseHander(event:MouseEvent){			var _t:DisplayObject=event.target as DisplayObject			switch(event.type){				case MouseEvent.MOUSE_UP:					if(BottomPanel._self.contains(_t)){						ItemHander._self._clearItem()					}else{						ItemHander._self._dropItem()					}										stage.removeEventListener(MouseEvent.MOUSE_UP,stageMouseHander)				break			}		}	}	}