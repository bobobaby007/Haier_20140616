//---updated:20110121package {	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.geom.Point;	import flash.display.DisplayObject;	public class ThreeDView {		public static var _items:Array=new Array();		public static var camera:Object//=new Object;		public static var renderTimer:Timer;		public static var _renderTimerGap:Number=24		public static var camera_focus=15		public function ThreeDView() {		}		public static function addItemIn($item:Object,$x:Number=0,$y:Number=0,$z:Number=0) {			if (! camera) {				camera=new Object();				camera.X=0;				camera.Y=0;				camera.Z=0;				camera.rotation=0;				camera.focus=camera_focus;			}			_items.push({item:$item,X:$x,Y:$y,Z:$z,Width:$item.width});			if (! renderTimer) {				renderTimer=new Timer(_renderTimerGap);				renderTimer.addEventListener(TimerEvent.TIMER,timerHander);				renderTimer.start();			}		}		private static function timerHander(event:TimerEvent) {			render();		}		public static function removeItemOut($item) {			for (var i:int=0; i<_items.length; i++) {				if (_items[i].item==$item) {					_items.splice(i,1);					break;				}			}		}		public static function render() {			_items.sortOn("Z",Array.DESCENDING)			for (var i:int=0; i<_items.length; i++) {				var _p=_items[i].item.parent				_p.addChild(_items[i].item)				if (_items[i].Z<=camera.Z) {					_items[i].item.visible=false;					continue				} else {					_items[i].item.visible=true;				}								var scale:Number=camera.focus/(_items[i].Z-camera.Z);				_items[i].item.scaleX=_items[i].item.scaleY=scale;				var itemPoint:Point=new Point(_items[i].X-camera.X,_items[i].Y-camera.Y);				var baseRotation:Number=180*Math.atan2(itemPoint.y,itemPoint.x)/Math.PI;				var finalRotation:Number=Math.PI*(camera.rotation+baseRotation)/180;				_items[i].item.x=scale*(itemPoint.length*Math.cos(finalRotation));				_items[i].item.y=scale*(itemPoint.length*Math.sin(finalRotation));											}		}		public static function getPoint($X:Number,$Y:Number,$Z:Number):Object{			var _point3d:Object=new Object			var scale:Number=($Z-camera.Z)/camera.focus;				_point3d.Z=$Z			_point3d.X=$X*scale			_point3d.Y=$Y*scale			return _point3d		}		public static function getItem($item):Object {			var theItem:Object=new Object();			for (var i:int=0; i<_items.length; i++) {				if (_items[i].item==$item) {					theItem=_items[i];					break;				}			}			return theItem;		}	}}