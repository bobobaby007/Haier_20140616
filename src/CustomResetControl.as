package {		import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Matrix;	import flash.geom.Point;		import tf.senocular.display.TransformTool;	import tf.senocular.display.TransformToolControl;	import tf.senocular.display.TransformToolCursor;		public class CustomResetControl extends TransformToolControl {				public function CustomResetControl() {			addEventListener(TransformTool.CONTROL_INIT, init, false, 0, true);		}				private function init(event:Event):void {						// add event listeners 			transformTool.addEventListener(TransformTool.NEW_TARGET, update, false, 0, true);			transformTool.addEventListener(TransformTool.TRANSFORM_TOOL, update, false, 0, true);			transformTool.addEventListener(TransformTool.CONTROL_TRANSFORM_TOOL, update, false, 0, true);			addEventListener(MouseEvent.CLICK, resetClick);						// initial positioning			update();		}				private function update(event:Event = null):void {			if (transformTool.target) {				// find to bottom right of selection				/*var maxX:Number = Math.max(transformTool.boundsTopLeft.x, transformTool.boundsTopRight.x);				maxX = Math.max(maxX, transformTool.boundsBottomRight.x);				maxX = Math.max(maxX, transformTool.boundsBottomLeft.x);								var maxY:Number = Math.max(transformTool.boundsTopLeft.y, transformTool.boundsTopRight.y);				maxY = Math.max(maxY, transformTool.boundsBottomRight.y);				maxY = Math.max(maxY, transformTool.boundsBottomLeft.y);*/								// set location to found values				var maxX:Number = transformTool.boundsTopRight.x				var maxY:Number = transformTool.boundsTopRight.y				x = maxX;				y = maxY;			}		}				public function resetClick(event:MouseEvent):void {						ItemsBoard._self._DeleteItem()									/*var origReg:Point = transformTool.registration;								transformTool.globalMatrix = new Matrix();			var regDiff = origReg.subtract(transformTool.registration);						var toolMatrix:Matrix = transformTool.toolMatrix;			toolMatrix.tx += regDiff.x;			toolMatrix.ty += regDiff.y;			transformTool.toolMatrix = toolMatrix;			transformTool.apply();*/			/*if(OptionMc._self._whichone=="wallpaper"){				ContainerBroad._self._deleteMc()			}			if(OptionMc._self._whichone=="draw"){				ContainerBroad2._self._deleteMc()			}*/					}	}}